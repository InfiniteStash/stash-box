name: Build

on:
  push:
    branches: [ develop, master ]
  pull_request:
    branches: [ develop ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres:13.2
        env:
          POSTGRES_DB: postgres        
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        volumes:
          - ${{env.GITHUB_WORKSPACE}}/scripts/initdb/pg_trgm.sql:/docker-entrypoint-initdb.d/init.sql
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x

    - name: Install Node
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Checkout
      run: git fetch --prune --unshallow --tags

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node_modules
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('frontend/yarn.lock') }}

    - name: Cache UI build
      uses: actions/cache@v2
      id: cache-ui
      env:
        cache-name: cache-ui
      with:
        path: ui/v2.5/build
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('frontend/yarn.lock', 'frontend/public/**', 'frontend/src/**', 'graphql/**/*.graphql') }}

    - name: Cache go build
      uses: actions/cache@v2
      env:
        cache-name: cache-go-cache
      with:
        path: .go-cache
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}

    - name: Pre-install
      run: make pre-ui

    - name: Validate UI
      # skip UI validation for pull requests if UI is unchanged
      if: ${{ github.event_name != 'pull_request' || steps.cache-ui.outputs.cache-hit != 'true' }}
      run: make ui-validate

    - name: Run tests
      run: POSTGRES_DB=postgres:postgres@localhost/postgres?sslmode=disable make vet it

    - name: Generate
      run: make generate

    - name: Build UI
      # skip UI build for pull requests if UI is unchanged (UI was cached)
      # this means that the build version/time may be incorrect if the UI is
      # not changed in a pull request
      if: ${{ github.event_name != 'pull_request' || steps.cache-ui.outputs.cache-hit != 'true' }}
      run: make ui-only
