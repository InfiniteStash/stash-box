version: '3.8'

services:
  postgres:
    container_name: postgres
    build: ./postgres
    restart: always
    environment:
      POSTGRES_USER: <USER>
      POSTGRES_PASSWORD: <PASSWORD>
      POSTGRES_DB: <DATABASE>
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - -c
      - "max_replication_slots=1"
    volumes:
      - /pgdata:/var/lib/postgresql/data

  stash-box:
    container_name: stash-box
    image: stashapp/stash-box:development
    restart: always
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "2m"
    links:
      - postgres
    volumes:
      - <CONFIG_DIR>:/root/.stash-box
    labels:
      - traefik.http.routers.stash-box.rule=Host(`<DOMAIN>`)
      - traefik.http.routers.stash-box.tls=true
      - traefik.http.routers.stash-box.tls.certresolver=stash-box
      - traefik.port=9998

  traefik:
    container_name: traefik
    image: traefik:2.3
    restart: always
    ports:
      - 80:80
      - 443:443
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
      - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
      - "--providers.docker=true"
      - "--certificatesResolvers.stash-box.acme.email=<EMAIL>"
      - "--certificatesResolvers.stash-box.acme.storage=/acme.json"
      - "--certificatesresolvers.stash-box.acme.tlschallenge=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /traefik/acme.json:/acme.json

  redis:
    image: 'redis:alpine'
    container_name: redis
    ports:
      - '6379:6379'

  pgsync:
    build: ./pgsync
    container_name: pgsync
    environment:
      - PG_USER=postgres
      - PG_PASSWORD=postgres
      - PG_DATABASE=postgres
      - PG_HOST=database
      - ELASTICSEARCH_HOST=elasticsearch
      - REDIS_HOST=redis

  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.13.4'
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - '9200:9200'

  kibana:
    image: 'docker.elastic.co/kibana/kibana:7.13.4'
    depends_on:
      - elasticsearch
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
